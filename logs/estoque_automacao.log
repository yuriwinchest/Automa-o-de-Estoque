import logging
import requests
import json

# Configurar o logger para registrar os dados no arquivo logs/estoque_automacao.log
logging.basicConfig(filename='logs/estoque_automacao.log', level=logging.INFO,
                    format='%(asctime)s:%(levelname)s:%(message)s')

def extrair_dados_publicos():
    """
    Função para extrair dados de uma API pública (JSONPlaceholder) para teste.
    Os dados extraídos serão gravados no arquivo de log em formato JSON.
    :return: Lista de dados ou uma mensagem de erro.
    """
    url = 'https://jsonplaceholder.typicode.com/posts'  # URL de exemplo da API pública

    try:
        response = requests.get(url)
        
        # Verificar se a requisição foi bem-sucedida
        if response.status_code == 200:
            dados = response.json()
            
            # Gravar os dados extraídos no arquivo de log em formato JSON
            with open('logs/estoque_automacao.log', 'a') as log_file:
                log_file.write("\n--- Dados Extraídos da API ---\n")
                log_file.write(json.dumps(dados, indent=4))  # Escrever os dados no arquivo em formato legível
                log_file.write("\n--- Fim dos Dados Extraídos ---\n")
            
            # Logar a extração bem-sucedida
            logging.info(f"Dados extraídos com sucesso e gravados no log.")
            return dados
        else:
            logging.error(f"Erro {response.status_code}: {response.text}")
            return None
    except requests.exceptions.RequestException as e:
        logging.error(f"Erro ao se conectar à API pública: {e}")
        return None
